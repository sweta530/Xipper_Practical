generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hotel {
  id        Int      @id @default(autoincrement())
  name      String
  location  String
  rooms     Room[]
  bookings  Booking[]

  @@map("hotels")
}

model Room {
  id          Int      @id @default(autoincrement())
  hotelId     Int
  hotel       Hotel    @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  roomType    String
  totalRooms  Int      @default(0) // Total number of rooms for this type
  available   Int      @default(0) // Track how many are available
  price       Float
  bookings    Booking[]
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  phone    String   @default("")
  bookings Booking[] @relation("UserBookings") 
}

model Booking {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserBookings") 
  hotelId   Int
  hotel     Hotel  @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  roomId    Int
  room      Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  checkIn   DateTime
  checkOut  DateTime
  guests    Int
  status    String  @default("upcoming") // New status field: upcoming, checked-in, checked-out, cancelled
  checkIns  CheckIn[]
}

model CheckIn {
  id        Int    @id @default(autoincrement())
  bookingId Int
  booking   Booking @relation(fields: [bookingId], references: [id], onDelete: Cascade)
  aadhaar   String

  @@map("checkins")
}
